# !/bin/sh

set -e

# Target folder, where config.mk shall be placed to
TARGET=abandoned

function help_and_quit {
    echo "Usage: ./configure --help"
    echo "       (to print this message)"
    echo "   or  ./configure [options]"
    echo "       (to generate makefile include)"
    echo "where options include:"
    echo "    -h, --help        print help message and exit"
    echo "    --debug           enable debug mode"
    echo "    --enable-assert   enable assertions"
    echo "                      by default assertions are disabled for release builds"
    echo "                      and enabled for debug builds"
    echo

    exit
}

# Common vars
RELEASE_ENABLED=1
ASSERT_ENABLED=0

# Iterate over command line args
for ARG in "$@"; do
    if [ $ARG = "--debug" ]; then
        RELEASE_ENABLED=0
        ASSERT_ENABLED=1
    elif [ $ARG = "--enable-assert" ]; then
        ASSERT_ENABLED=1
    elif [ $ARG = "--help" ] || [ $ARG = "-h" ]; then
        help_and_quit
    else
        echo "Unknown argument $ARG, skipping"
    fi
done

mkdir -p ${TARGET}

# Write common header
echo "# Generated file, do not edit" > ${TARGET}/config.mk

# Write optimization options
if [ $RELEASE_ENABLED -eq 1 ]; then
    echo '''
CFLAGS    = -O3
LFLAGS    =
''' >> ${TARGET}/config.mk
else
    echo '''
CFLAGS    = -O1 -g
LFLAGS    = -g
''' >> ${TARGET}/config.mk
fi

# Write assertion options
if [ $ASSERT_ENABLED -eq 0 ]; then
    echo '''
# Disable debug and ublas debugging
CFLAGS    += -DNDEBUG -DBOOST_UBLAS_NDEBUG
# Also disable rtti to minimize footprint
CFLAGS    += -fno-rtti
''' > ${TARGET}/config.mk
fi

# Write newline at the end of file
echo >> ${TARGET}/config.mk

echo "Generated: ${TARGET}/config.mk"
echo "DONE"

